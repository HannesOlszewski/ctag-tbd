#include <atomic>
#include "ctagSoundProcessor.hpp"
#include "airwindows/EChorus.hpp"

namespace CTAG {
    namespace SP {
        class ctagSoundProcessorEChorus : public ctagSoundProcessor {
        public:
            virtual void Process(const ProcessData &) override;

            ctagSoundProcessorEChorus();

            virtual ~ctagSoundProcessorEChorus();

        private:
            virtual void knowYourself() override;

            float preRange = 0.f;

            //default stuff
            airwindows::EChorus echorus;
            // private attributes could go here
            // autogenerated code here
            // sectionHpp
            atomic<int32_t> bypass, trig_bypass;
            atomic<int32_t> pdepth, cv_pdepth;
            atomic<int32_t> stages, cv_stages;
            atomic<int32_t> prate, cv_prate;
            atomic<int32_t> pwidth, cv_pwidth;
            atomic<int32_t> pwet, cv_pwet;
            atomic<int32_t> mono, trig_mono;
            // sectionHpp
        };
    }
}