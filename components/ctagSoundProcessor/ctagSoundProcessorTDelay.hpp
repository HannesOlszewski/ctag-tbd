#include <atomic>
#include "ctagSoundProcessor.hpp"
#include "airwindows/TDelay.hpp"

namespace CTAG {
    namespace SP {
        class ctagSoundProcessorTDelay : public ctagSoundProcessor {
        public:
            virtual void Process(const ProcessData &) override;
            ctagSoundProcessorTDelay();
            virtual ~ctagSoundProcessorTDelay();

        private:
            virtual void knowYourself() override;
            airwindows::TDelay tdelay;
            float preDelay = 0.f;
            float preDepth = 0.f;
            float preLNFT = 0.f;
            // private attributes could go here
            // autogenerated code here
            // sectionHpp
	atomic<int32_t> bypass, trig_bypass;
	atomic<int32_t> depth, cv_depth;
	atomic<int32_t> delay, cv_delay;
	atomic<int32_t> feedback, cv_feedback;
	atomic<int32_t> lnft, cv_lnft;
	atomic<int32_t> dry, cv_dry;
	atomic<int32_t> wet, cv_wet;
	// sectionHpp
        };
    }
}